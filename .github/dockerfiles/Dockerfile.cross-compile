## %CopyrightBegin%
##
## Copyright Ericsson AB 2024. All Rights Reserved.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## %CopyrightEnd%

##
## This docker file will build Erlang on 32-bit to 64-bit x86
##
ARG BASE=ghcr.io/erlang/otp/i386-debian-base
FROM $BASE as build

ARG MAKEFLAGS=-j4
ENV MAKEFLAGS=$MAKEFLAGS \
        ERLC_USE_SERVER=yes \
        ERL_TOP=/buildroot/bootstrap/otp

WORKDIR /buildroot/bootstrap

ARG ARCHIVE=./otp.tar.gz
COPY $ARCHIVE /buildroot/otp.tar.gz
RUN tar xzf ../otp.tar.gz

## Build the bootstrap system
RUN cd $ERL_TOP && CFLAGS="-Wall -O2 -g" ./configure && make && make install

ENV HOST=$HOST_TRIP \
        CC=$HOST_TRIP-gcc \
        CPPFLAGS="--sysroot=/buildroot/sysroot" \
        CFLAGS="--sysroot=/buildroot/sysroot -O2 -g -Werror -DwxSTC_DISABLE_MACRO_DEPRECATIONS=1" \
        CPP=$HOST_TRIP-cpp \
        CXX=$HOST_TRIP-g++ \
        LD=$CC \
        LD_FLAGS="--sysroot=/buildroot/sysroot" \
        DED_CFLAGS="$CFLAGS" \
        DED_LDFLAGS="$LDFLAGS -shared -Wl,-Bsymbolic" \
        RANLIB=$HOST_TRIP-ranlib \
        AR=$HOST_TRIP-ar \
        erl_xcomp_sysroot=/buildroot/sysroot \
        ERL_TOP=/buildroot/otp

RUN cd /buildroot && tar xzf otp.tar.gz

WORKDIR /buildroot/otp

## Build the cross system
# We cannot use config.guess for --build since its value clashes with the
# canonical value of host...
RUN ./configure --prefix=/otp/ --host=$HOST --build=x86-pc-linux-gnu && \
    ./otp_build download_gdb_tools && \
    OTP_SMALL_BUILD=true V=1 make && \
    make install

## Build the cross tests
ENV CFLAGS="--sysroot=/buildroot/sysroot -O2 -g"
RUN ./otp_build tests
RUN cd release/tests/test_server && \
        erl -sname test@docker -noshell \
        -eval "ts:install([{cross,\"yes\"},{crossflags,[{\"host\",\"$HOST\"}]},{crossroot,\"/$ERL_TOP\"}])." \
        -s ts compile_testcases -s init stop

FROM ghcr.io/erlang/otp/debian-base as install

# Install the released application
COPY --from=build /otp /otp
COPY --from=build /buildroot/otp/release/tests /tests

ENV PATH=/otp/bin:$PATH
