
  [;1m-spec trace(PidPortSpec, How, FlagList) -> integer()[0m
  [;1m               when[0m
  [;1m                   PidPortSpec ::[0m
  [;1m                       pid() |[0m
  [;1m                       port() |[0m
  [;1m                       all | processes | ports | existing |[0m
  [;1m                       existing_processes | existing_ports | new |[0m
  [;1m                       new_processes | new_ports,[0m
  [;1m                   How :: boolean(),[0m
  [;1m                   FlagList :: [trace_flag()].[0m

  Turn on or off trace flags on processes or ports for the static
  legacy trace session.

  [;;4mChange[0m

    This function is superseded by [;;4mtrace:process/4[0m and [;;4m[0m
    [;;4mtrace:port/4[0m that

    operate on dynamic trace sessions.

  Argument [;;4mFlagList[0m can contain two additional options:

   â€¢ [;;4m{tracer, Tracer}[0m - Specifies where to send the trace
     messages. [;;4mTracer[0m must be the process identifier of a local
     process or the port identifier of a local port.

   â€¢ [;;4m{tracer, TracerModule, TracerState}[0m - Specifies that a
     tracer module is to be called instead of sending a trace
     message. The tracer module can then ignore or change the
     trace message. For more details on how to write a tracer
     module, see [;;4merl_tracer[0m.

  If no [;;4mtracer[0m is specified, the calling process receives all the
  trace messages. The legacy trace session has no specified tracer.

  For further documentation see [;;4mtrace:process/4[0m and [;;4mtrace:port/4[0m.
