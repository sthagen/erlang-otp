<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>1996</year><year>2023</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.

    </legalnotice>

    <title>edlin</title>
    <prepared></prepared>
    <docno></docno>
    <date></date>
    <rev></rev>
  </header>
  <module since="OTP 26.0">edlin</module>
  <modulesummary>Line and input interpretter for the erlang shell.</modulesummary>
  <description>
    <p>This module reads input, handles any escape sequences that have been configured via edlin_key
    and outputs action requests. The action requests are handled either by modules <c>group</c> or the <c>user_drv</c>.
    </p>
  </description>
  <section>
    <title>Actions</title>
    <p>The commands below are the built-in action requests for switching input modes on the normal
    shell or navigating, or manipulating the line feed. The line feed supports multiple lines.
    </p>
    <taglist>
      <tag><c>auto_blink</c></tag>
      <item>
        <p>Automatically close the closest matching opening parenthesis.</p>
      </item>
      <tag><c>backward_char</c></tag>
      <item>
        <p>Move backward one character.</p>
      </item>
      <tag><c>backward_delete_char</c></tag>
      <item>
        <p>Delete the character behind the cursor.</p>
      </item>
      <tag><c>backward_delete_word</c></tag>
      <item>
        <p>Delete the word behind the cursor.</p>
      </item>
      <tag><c>backward_kill_line</c></tag>
      <item>
        <p>Delete all characters from the cursor to the beginning of the line and save them in the kill buffer.</p>
      </item>
      <tag><c>backward_kill_word</c></tag>
      <item>
        <p>Delete the word behind the cursor and save it in the kill buffer.</p>
      </item>
      <tag><c>backward_line</c></tag>
      <item>
        <p>Move backward one line.</p>
      </item>
      <tag><c>backward_word</c></tag>
      <item>
        <p>Move backward one word.</p>
      </item>
      <tag><c>beginning_of_expression</c></tag>
      <item>
        <p>Move to the beginning of the expression.</p>
      </item>
      <tag><c>beginning_of_line</c></tag>
      <item>
        <p>Move to the beginning of the line.</p>
      </item>
      <tag><c>clear</c></tag>
      <item>
        <p>Clear the screen.</p>
      </item>
      <tag><c>clear_line</c></tag>
      <item>
        <p>Clear the current expression.</p>
      </item>
      <tag><c>end_of_expression</c></tag>
      <item>
        <p>Move to the end of the expression.</p>
      </item>
      <tag><c>end_of_line</c></tag>
      <item>
        <p>Move to the end of the line.</p>
      </item>
      <tag><c>forward_char</c></tag>
      <item>
        <p>Move forward one character.</p>
      </item>
      <tag><c>forward_delete_char</c></tag>
      <item>
        <p>Delete the character under the cursor.</p>
      </item>
      <tag><c>forward_line</c></tag>
      <item>
        <p>Move forward one line.</p>
      </item>
      <tag><c>forward_word</c></tag>
      <item>
        <p>Move forward one word.</p>
      </item>
      <tag><c>history_down</c></tag>
      <item>
        <p>Move to the next item in the history.</p>
      </item>
      <tag><c>history_up</c></tag>
      <item>
        <p>Move to the previous item in the history.</p>
      </item>
      <tag><c>kill_line</c></tag>
      <item>
        <p>Delete all characters from the cursor to the end of the line and save them in the kill buffer.</p>
      </item>
      <tag><c>kill_word</c></tag>
      <item>
        <p>Delete the word under the cursor and save it in the kill buffer.</p>
      </item>
      <tag><c>new_line_finish</c></tag>
      <item>
        <p>Add a newline at the end of the line and try to evaluate the current expression.</p>
      </item>
      <tag><c>newline</c></tag>
      <item>
        <p>Add a newline at the cursor position.</p>
      </item>
      <tag><c>open_editor</c></tag>
      <item>
        <p>Open the current line in an editor e.g. EDITOR="code -w" opens a buffer in vs code.
        Note that you need to pass a flag to the editor so that it signals the shell when you close
        the buffer.</p>
      </item>
      <tag><c>redraw_line</c></tag>
      <item>
        <p>Redraw the current line.</p>
      </item>
      <tag><c>search_cancel</c></tag>
      <item>
        <p>Cancel the current search.</p>
      </item>
      <tag><c>search_found</c></tag>
      <item>
        <p>Accept the current search result and submit it.</p>
      </item>
      <tag><c>search_quit</c></tag>
      <item>
        <p>Accept the current search result, but edit it before submitting.</p>
      </item>
      <tag><c>search</c></tag>
      <item>
        <p>Enter search mode, search the history.</p>
      </item>
      <tag><c>search_down</c></tag>
      <item>
        <p>Skip to the next line in the history that matches the current search expression.</p>
      </item>
      <tag><c>search_up</c></tag>
      <item>
        <p>Skip to the previous line in the history that matches the current search expression.</p>
      </item>
      <tag><c>tab_expand_full</c></tag>
      <item>
        <p>Output all possible tab completions.</p>
      </item>
      <tag><c>tab_expand_quit</c></tag>
      <item>
        <p>Go back to normal mode.</p>
      </item>
      <tag><c>tab_expand</c></tag>
      <item>
        <p>Autocomplete the current word, or show 5 lines of possible completions.</p>
      </item>
      <tag><c>transpose_char</c></tag>
      <item>
        <p>Swap the character behind the cursor with the one in front of it.</p>
      </item>
      <tag><c>transpose_word</c></tag>
      <item>
        <p>Swap the word behind the cursor with the one in front of it.</p>
      </item>
      <tag><c>yank</c></tag>
      <item>
        <p>Insert the contents of the kill buffer at the cursor position.</p>
      </item>
    </taglist>
  </section>
</erlref>